////Прикладные методы////
Функция ком_ПрочитатьПервыйЛистExcel(ИмяФайла, НомерПервойСтроки = 1, НомерПервойКолонки = 1, ВсегоСтрок = 0, ВсегоКолонок = 0, ОписаниеОшибки = "") Экспорт
	
	Отказ = Ложь;
		
	Эксель = ком_ПолучитьExcel(Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КнигаЭксель = ком_ПолучитьКнигуExcel(Эксель, ИмяФайла, Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		ком_ЗакрытьExcel(Эксель);
		Возврат Неопределено;	
	КонецЕсли;
	
	ЛистЭксель = ком_ПолучитьЛистExcel(КнигаЭксель, 1, Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		ОписаниеОшибки = "Не удалось открыть лист номер " + 1 + ". ОписаниеОшибки: " + ОписаниеОшибки;
		ком_ЗакрытьКнигуExcel(КнигаЭксель);
		ком_ЗакрытьExcel(Эксель);
		Возврат Неопределено;
	КонецЕсли;
	РезультатЧтенияЛиста = ком_ПрочитатьЛистExcel(ЛистЭксель, НомерПервойСтроки, НомерПервойКолонки, ВсегоСтрок, ВсегоКолонок);
		
	ком_ЗакрытьКнигуExcel(КнигаЭксель);
	ком_ЗакрытьExcel(Эксель);
	
	Если РезультатЧтенияЛиста = Неопределено Тогда
		ОписаниеОшибки = "Не удалось прочитать файл";
		Возврат Неопределено;
	КонецЕсли;
	
	Если РезультатЧтенияЛиста.Количество() = 0 Тогда
		ОписаниеОшибки = "Файл пустой";
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РезультатЧтенияЛиста;
КонецФункции

Функция ком_ЗаписатьТаблицуЗначенийНаПервыйЛист(ИмяФайла, ТаблицаЗначений, ОписаниеОшибки = "") Экспорт
	
	Отказ = Ложь;
	ОписаниеОшибки = "";
	
	Эксель = ком_ПолучитьExcel(Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КнигаЭксель = ком_ДобавитьКнигуExcel(Эксель, Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		ком_ЗакрытьExcel(Эксель);
		Возврат Неопределено;	
	КонецЕсли;
	
	ЛистЗаказы = КнигаЭксель.Worksheets(1);
	ком_ЗаполнитьЛистExcelИзТаблицыЗначений(ЛистЗаказы, ТаблицаЗначений);

	// Сохранение файла
	КнигаЭксель.SaveAs(ИмяФайла);
	
	ком_ЗакрытьКнигуExcel(КнигаЭксель);
	ком_ЗакрытьExcel(Эксель);
	
КонецФункции

////Чтение/заполнение через ComSafeArray////
Функция ком_ПрочитатьЛистExcel(ЛистЭксель, НомерПервойСтроки = 1, НомерПервойКолонки = 1, ВсегоСтрок = 0, ВсегоКолонок = 0) Экспорт
		
	Если ВсегоСтрок = 0 Тогда
		ВсегоСтрок = ЛистЭксель.Cells.SpecialCells(11).Row;
	КонецЕсли;
	Если ВсегоКолонок = 0 Тогда
		ВсегоКолонок = ЛистЭксель.Cells.SpecialCells(11).Column;
	КонецЕсли;
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	
	ТЗ =  Новый ТаблицаЗначений;
	Для Счетчик = 1 По ВсегоКолонок Цикл
		СчетчикСтрокой = ОписаниеТиповСтрока.ПривестиЗначение(Счетчик);
		СчетчикСтрокой = СтрЗаменить(СчетчикСтрокой, Символы.НПП, "");
		
		ТЗ.Колонки.Добавить("Колонка"+СчетчикСтрокой, ОписаниеТиповСтрока);
	КонецЦикла;
	
	Для Счетчик = НомерПервойСтроки По ВсегоСтрок Цикл
		НоваяСтрока = ТЗ.Добавить();
	КонецЦикла;
	
	Область = ЛистЭксель.Range(ЛистЭксель.Cells(НомерПервойСтроки,НомерПервойКолонки), ЛистЭксель.Cells(ВсегоСтрок,ВсегоКолонок));
	Данные = Область.Value.Выгрузить();
	
	Для Счетчик = 0 По ВсегоКолонок-1 Цикл
		ТЗ.ЗагрузитьКолонку(Данные[Счетчик], Счетчик);
	КонецЦикла;
		
	Возврат ТЗ;
КонецФункции
 
Функция ком_ЗаполнитьЛистExcelИзТаблицыЗначений(ЛистExcel, ТаблицаЗначений) Экспорт
	
	ВсегоКолонок = ТаблицаЗначений.Колонки.Количество();
	ВсегоСтрок = ТаблицаЗначений.Количество();
	
	// Создание COMSafeArray
	МассивКом = Новый COMSafeArray("VT_Variant", ВсегоКолонок, ВсегоСтрок);
	
	// Заполнение COMSafeArray
	Для Стр = 0 По ВсегоСтрок - 1 Цикл
		Для Кол = 0 По ВсегоКолонок - 1 Цикл
			МассивКом.SetValue(Кол, Стр, ТаблицаЗначений[Стр][Кол]);
		КонецЦикла;
	КонецЦикла;
	// Присвоение области листа Excel значений из COMSafeArray
	ЛистExcel.Range(ЛистExcel.Cells(1, 1), ЛистExcel.Cells(ВсегоСтрок, ВсегоКолонок)).Value = МассивКом;
	
КонецФункции

////ОТКРЫТЬ////
Функция ком_ПолучитьExcel(Отказ = Ложь, ОписаниеОшибки = "") Экспорт
	
	Эксель = Неопределено;
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.Visible = Ложь; 
		Эксель.DisplayAlerts=Ложь;		
	Исключение
		ОписаниеОшибки = "Не удалось получить COM-объект. Описание ошибки: " + ОписаниеОшибки();
		Отказ = Истина;	
	КонецПопытки;
	
	Возврат Эксель;
КонецФункции

Функция ком_ПолучитьКнигуExcel(Эксель, ИмяФайла, Отказ = Ложь, ОписаниеОшибки = "") Экспорт
	
	КнигаЭксель = Неопределено;
	Попытка
		КнигаЭксель = Эксель.WorkBooks.Open(ИмяФайла);
	Исключение
		ОписаниеОшибки = "Не удалось открыть файл Excel. Описание ошибки: " + ОписаниеОшибки();
		Отказ = Истина;	
	КонецПопытки;
	
	Возврат КнигаЭксель;
КонецФункции

Функция ком_ПолучитьЛистExcel(КнигаЭксель, ИмяИлиНомерЛиста = 1, Отказ = Ложь, ОписаниеОшибки = "") Экспорт
	
	ЛистЭксель = Неопределено;
	Попытка
		ЛистЭксель = КнигаЭксель.WorkSheets(ИмяИлиНомерЛиста);
	Исключение
		ОписаниеОшибки = "Не удалось открыть лист Excel. ИмяИлиНомерЛиста: " + ИмяИлиНомерЛиста + ". Описание ошибки: " + ОписаниеОшибки();
		Отказ = Истина;;	
	КонецПопытки;
	
	Возврат ЛистЭксель;
КонецФункции

////ДОБАВИТЬ////
Функция ком_ДобавитьКнигуExcel(Эксель, Отказ, ОписаниеОшибки) Экспорт
	
	КнигаЭксель = Неопределено;
	Попытка
		КнигаЭксель = Эксель.WorkBooks.Add();
	Исключение
		ОписаниеОшибки = "Не удалось добавить книгу. Описание ошибки: " + ОписаниеОшибки();
		Отказ = Истина;	
	КонецПопытки;
	
	Возврат КнигаЭксель;	
КонецФункции

Функция ком_ДобавитьЛистExcel(КнигаЭксель, ИмяЛиста = "", Отказ, ОписаниеОшибки) Экспорт
	
	ЛистЭксель = Неопределено;
	Попытка
		ЛистЭксель = КнигаЭксель.Worksheets.Add();
		
		Если ЗначениеЗаполнено(ИмяЛиста) Тогда
			ЛистЭксель.Name = ИмяЛиста;
		КонецЕсли;
	Исключение
		ОписаниеОшибки = "Не удалось добавить лист. Описание ошибки: " + ОписаниеОшибки();
		Отказ = Истина;	
	КонецПопытки;
	
	Возврат ЛистЭксель;
КонецФункции

////ЗАКРЫТЬ////
Процедура ком_ЗакрытьКнигуExcel(КнигаЭксель, Сохранение = 0) Экспорт
	
	Попытка
		КнигаЭксель.Close(Сохранение);
	Исключение
	КонецПопытки;
		
	КнигаЭксель = Неопределено;
	
КонецПроцедуры

Процедура ком_ЗакрытьExcel(Эксель) Экспорт
	
	Попытка
		Эксель.DisplayAlerts = 0;
		Эксель.Quit();
	Исключение
	КонецПопытки;
	
	Эксель = Неопределено;
	
КонецПроцедуры

////СЛУЖЕБНЫЕ////
Процедура ком_Пример(ПутьКФайлу)
	
	Отказ = Ложь;
	ОписаниеОшибки = "";
	
	Эксель = ком_ПолучитьExcel(Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		Сообщить(ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	КнигаЭксель = ком_ПолучитьКнигуExcel(Эксель, ПутьКФайлу, Отказ, ОписаниеОшибки);
	Если Отказ Тогда
		Сообщить(ОписаниеОшибки);
		Возврат;	
	КонецЕсли;
	
	КоличествоЛистов = КнигаЭксель.Sheets.Count;
	Для СчетчикПоЛистам = 1 По КоличествоЛистов Цикл
		Отказ = Ложь;
		ОписаниеОшибки = "";
		ЛистЭксель = ком_ПолучитьЛистExcel(КнигаЭксель, СчетчикПоЛистам, Отказ, ОписаниеОшибки);
		Если Отказ Тогда
			Сообщить("Не удалось открыть лист номер " + СчетчикПоЛистам + ". ОписаниеОшибки: " + ОписаниеОшибки);
			Продолжить;
		КонецЕсли;
		ТЧ = ком_ПрочитатьЛистExcel(ЛистЭксель);
		
	КонецЦикла;
	
	ком_ЗакрытьКнигуExcel(КнигаЭксель);
	ком_ЗакрытьExcel(Эксель);
	
КонецПроцедуры

Процедура ком_УбитьЗависшиеПроцессы() Экспорт
	//убивает процессы запущенные под текущим пользователем
	
	ИскатьЗависшиеПроцессы = Истина;
	ВыходИзРекурсии = 50; //50 попыток, потом выходим
	Пока ИскатьЗависшиеПроцессы Цикл
		
		Если ВыходИзРекурсии = 0 Тогда
			ИскатьЗависшиеПроцессы = Ложь;	
		КонецЕсли;
		
		Попытка
			Эксель = ПолучитьCOMОбъект(, "Excel.Application");
			ком_ЗакрытьExcel(Эксель);
			ВыходИзРекурсии = ВыходИзРекурсии -1;
		Исключение
			ИскатьЗависшиеПроцессы = Ложь;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры
